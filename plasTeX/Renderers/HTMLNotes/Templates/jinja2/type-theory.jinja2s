name: typetheory_element
\mathrel{:}

name: typetheory_same
\equiv

name: typetheory_universe
{% set grade = obj.attributes['grade'] %}
{% set grade_subscript = ('_{%s}' % grade) if grade else '' %}
{{ '\\mathscr{U}%s' % grade_subscript }}

name: typetheory_piType
{% set index = obj.attributes['index'] %}
{% set index_indicator = ('%s.' % index) if index else '' %}
{{ '\\Pi{}%s\,' % index_indicator }}

name: typetheory_abstraction
{% set index = obj.attributes['index'] %}
{% set index_indicator = ('%s.' % index) if index else '' %}
{{ '\\lambda{}%s\,' % index_indicator }}

name: typetheory_domain
{{ '\\operatorname{Dom}(%s)' % obj.attributes['function'] }}

name: typetheory_codomain
{{ '\\operatorname{Cod}(%s)' % obj.attributes['function'] }}

name: typetheory_idFunction
{% set domain = obj.attributes['domain'] %}
{% set domain_subscript = ('_{%s}' % domain) if domain else '' %}
{{ '\\operatorname{id}%s' % domain_subscript }}

name: typetheory_sigmaType
{% set index = obj.attributes['index'] %}
{% set index_indicator = ('%s.' % index) if index else '' %}
{{ '\\Sigma{}%s\,' % index_indicator }}

name: typetheory_pair
{% set attributes = obj.attributes %}
({{ attributes['first_component'] }}, {{ attributes['second_component'] }})

name: typetheory_product
{% set attributes = obj.attributes %}
{{ attributes['first_factor'] }} \times{} {{ attributes['second_factor'] }}

name: typetheory_firstProjection
\operatorname{pr}_{1}

name: typetheory_secondProjection
\operatorname{pr}_{2}

name: typetheory_emptyType
\mathbf{0}

name: typetheory_unitType
\mathbf{1}

name: typetheory_unitTypeElement
\star

name: typetheory_booleanType
\mathbf{B}

name: typetheory_booleanTrueElement
\mathbf{t}

name: typetheory_booleanFalseElement
\mathbf{f}

name: typetheory_coproduct
{% set attributes = obj.attributes %}
{{ attributes['first_component'] }} \sqcup{} {{ attributes['second_component'] }}

name: typetheory_firstInjection
\operatorname{i}_{1}

name: typetheory_secondInjection
\operatorname{i}_{2}

name: typetheory_natural
\mathbf{N}

name: typetheory_zeroNatural
\operatorname{0}

name: typetheory_successor
\operatorname{S}

name: typetheory_pathFamily
{{ '\operatorname{Path}_{%s}' % obj.attributes['base'] }}

name: typetheory_pathType
{% set attributes = obj.attributes %}
{{ attributes['start'] }} = {{ attributes['end'] }}

name: typetheory_idLoop
{{ '\epsilon_{%s}' % obj.attributes['base'] }}
